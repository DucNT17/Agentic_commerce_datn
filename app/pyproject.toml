[build-system]
requires = ["setuptools>=68.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ecommerce-agentic-ai"
version = "0.1.0"
description = "Hệ thống Agentic AI cho Thương mại Điện tử"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = ["ai", "agent", "ecommerce", "ebay", "llm"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    # Web Framework
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    
    # AI/LLM Libraries
    "langchain>=0.1.0",
    "langchain-community>=0.0.10",
    "langchain-openai>=0.0.5",
    "openai>=1.10.0",
    "tiktoken>=0.5.2",
    
    # Vector Database & Embeddings
    "chromadb>=0.4.18",
    "sentence-transformers>=2.2.2",
    
    # HTTP Client
    "requests>=2.31.0",
    "httpx>=0.25.0",
    "aiohttp>=3.9.0",
    
    # Database
    "sqlalchemy>=2.0.0",
    "alembic>=1.13.0",
    "psycopg2-binary>=2.9.9",
    "asyncpg>=0.29.0",
    
    # Caching
    "redis>=5.0.0",
    "python-redis-cache>=1.0.0",
    
    # Data Processing
    "pandas>=2.1.0",
    "numpy>=1.24.0",
    
    # Authentication & Security
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",
    
    # Utilities
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0.1",
    "loguru>=0.7.2",
    "tenacity>=8.2.3",
    
    # E-commerce APIs
    "ebaysdk-python>=2.2.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "httpx-mock>=0.15.0",
    
    # Code Quality
    "black>=23.12.0",
    "isort>=5.13.0",
    "flake8>=7.0.0",
    "mypy>=1.7.0",
    "pylint>=3.0.0",
    
    # Development Tools
    "ipython>=8.18.0",
    "jupyter>=1.0.0",
    "pre-commit>=3.6.0",
]

production = [
    "gunicorn>=21.2.0",
    "prometheus-client>=0.19.0",
    "sentry-sdk>=1.39.0",
]

all = [
    "ecommerce-agentic-ai[dev,production]",
]

[project.urls]
Homepage = "https://github.com/yourusername/ecommerce-agentic-ai"
Documentation = "https://github.com/yourusername/ecommerce-agentic-ai/docs"
Repository = "https://github.com/yourusername/ecommerce-agentic-ai"
Issues = "https://github.com/yourusername/ecommerce-agentic-ai/issues"

[tool.setuptools]
packages = ["agent", "api", "services", "tests"]

[tool.setuptools.package-dir]
"" = "."

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | \.env
  | __pycache__
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow running tests",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true
ignore_missing_imports = true

[tool.pylint.messages_control]
max-line-length = 100
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "R0903",  # too-few-public-methods
]

[tool.coverage.run]
source = ["agent", "api", "services"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

